replicas: 1

image:
  name: ghcr.io/goauthentik/authentik
  tag: 2021.4.5
  pullPolicy: IfNotPresent

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
  labels: {}
  hosts:
    - host: authentik.domain.tld
      paths:
        - path: "/"
          pathType: Prefix

authentik:
  postgresql:
    host: ""
    database: ""
    user: ""
    s3_backup:
      access_key: ""
      bucket: ""
      region: ""
      host: ""
  redis:
    host: ""

# see configuration options at https://goauthentik.io/docs/installation/docker-compose-config/
env: {}
  # OUTPOSTS__DOCKER_IMAGE_BASE: "ghcr.io/goauthentik/authentik"
  # SECRET_KEY: ""
  # POSTGRESQL__S3_BACKUP__SECRET_KEY: ""
  # EMAIL__PASSWORD: ""
  # POSTGRESQL__HOST: ""
  # POSTGRESQL__NAME: ""
  # POSTGRESQL__USER: ""
  # POSTGRESQL__S3_BACKUP__ACCESS_KEY: ""
  # POSTGRESQL__S3_BACKUP__BUCKET: ""
  # POSTGRESQL__S3_BACKUP__REGION: ""
  # POSTGRESQL__S3_BACKUP__HOST: ""
  # REDIS__HOST: ""
  # ERROR_REPORTING__ENABLED: ""
  # ERROR_REPORTING__ENVIRONMENT: ""
  # ERROR_REPORTING__SEND_PII: ""
  # LOG_LEVEL: ""
  # OUTPOSTS__DOCKER_IMAGE_BASE: ""
  # EMAIL__HOST: ""
  # EMAIL__PORT: ""
  # EMAIL__USERNAME: ""
  # EMAIL__USE_TLS: ""
  # EMAIL__USE_SSL: ""
  # EMAIL__TIMEOUT: ""
  # EMAIL__FROM: ""
envFrom: []

service:
  enabled: true
  type: ClusterIP
  port: 80
  name: http
  protocol: TCP
  labels: {}
  annotations: {}

volumes: []

volumeMounts: []

affinity: {}

resources:
  server: {}
  worker: {}

livenessProbe:
  enabled: true
  httpGet:
    path: /-/health/live/
    port: http
  initialDelaySeconds: 15
  periodSeconds: 30

readinessProbe:
  enabled: true
  httpGet:
    path: /-/health/ready/
    port: http
  initialDelaySeconds: 15
  periodSeconds: 30

serviceAccount:
  create: true

prometheus:
  serviceMonitor:
    create: false
    interval: 10s
    scrapeTimeout: 3s
    secret:
      name: ""
      # username currently _MUST_ be "monitor"
      usernameKey: ""
      passwordKey: ""
  rules:
    create: false

geoip:
  enabled: false
  schedule: "0 */8 * * *"
  accountId: ""
  licenseKey: ""
  editionIds: "GeoLite2-City"

postgresql:
  enabled: false
  # postgresqlUsername: ""
  # postgresqlPassword: ""
  # postgresqlDatabase: ""
  # persistence:
  #   enabled: true
  #   storageClass:
  #   accessModes:
  #     - ReadWriteOnce
redis:
  enabled: false
  auth:
    enabled: false
